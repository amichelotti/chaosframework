package it.infn.chaos.mds;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class NewUSCUAssociationVaadin extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout	mainLayout;
	@AutoGenerated
	private HorizontalLayout	horizontalLayout_3;
	@AutoGenerated
	private TextArea	cuDriverTextArea;
	@AutoGenerated
	private HorizontalLayout	horizontalLayout_2;
	@AutoGenerated
	private TextArea	cuParamTextArea;
	@AutoGenerated
	private HorizontalLayout	horizontalLayout_1;
	@AutoGenerated
	private TextField	cuIDTextField;
	@AutoGenerated
	private Label	cuIDLabel;
	@AutoGenerated
	private HorizontalLayout	horizontalLayoutCUType;
	@AutoGenerated
	private Label	cuTypeSelected;
	@AutoGenerated
	private Label	cuTypeLabel;
	@AutoGenerated
	private HorizontalLayout	horizontalLayoutUS;
	@AutoGenerated
	private Label	usSelected;
	@AutoGenerated
	private Label	usLabel;
	public TextArea getCuDriverTextArea() {
		return cuDriverTextArea;
	}

	public TextArea getCuParamTextArea() {
		return cuParamTextArea;
	}

	public TextField getCuIDTextField() {
		return cuIDTextField;
	}

	public Label getCuTypeSelected() {
		return cuTypeSelected;
	}

	public Label getUsSelected() {
		return usSelected;
	}

	/**
	 * The constructor should first build the main layout, set the composition root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual editor.
	 */
	public NewUSCUAssociationVaadin() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayoutUS
		horizontalLayoutUS = buildHorizontalLayoutUS();
		mainLayout.addComponent(horizontalLayoutUS);
		
		// horizontalLayoutCUType
		horizontalLayoutCUType = buildHorizontalLayoutCUType();
		mainLayout.addComponent(horizontalLayoutCUType);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		
		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2);
		
		// horizontalLayout_3
		horizontalLayout_3 = buildHorizontalLayout_3();
		mainLayout.addComponent(horizontalLayout_3);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutUS() {
		// common part: create layout
		horizontalLayoutUS = new HorizontalLayout();
		horizontalLayoutUS.setImmediate(false);
		horizontalLayoutUS.setWidth("-1px");
		horizontalLayoutUS.setHeight("-1px");
		horizontalLayoutUS.setMargin(false);
		
		// usLabel
		usLabel = new Label();
		usLabel.setImmediate(false);
		usLabel.setWidth("-1px");
		usLabel.setHeight("-1px");
		usLabel.setValue("Unit Server:");
		horizontalLayoutUS.addComponent(usLabel);
		
		// usSelected
		usSelected = new Label();
		usSelected.setImmediate(false);
		usSelected.setWidth("100.0%");
		usSelected.setHeight("-1px");
		usSelected.setValue("Unit Server Selected");
		horizontalLayoutUS.addComponent(usSelected);
		horizontalLayoutUS.setExpandRatio(usSelected, 1.0f);
		
		return horizontalLayoutUS;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutCUType() {
		// common part: create layout
		horizontalLayoutCUType = new HorizontalLayout();
		horizontalLayoutCUType.setImmediate(false);
		horizontalLayoutCUType.setWidth("-1px");
		horizontalLayoutCUType.setHeight("-1px");
		horizontalLayoutCUType.setMargin(false);
		
		// cuTypeLabel
		cuTypeLabel = new Label();
		cuTypeLabel.setImmediate(false);
		cuTypeLabel.setWidth("-1px");
		cuTypeLabel.setHeight("-1px");
		cuTypeLabel.setValue("CU Type:");
		horizontalLayoutCUType.addComponent(cuTypeLabel);
		
		// cuTypeSelected
		cuTypeSelected = new Label();
		cuTypeSelected.setImmediate(false);
		cuTypeSelected.setWidth("100.0%");
		cuTypeSelected.setHeight("-1px");
		cuTypeSelected.setValue("CU Type Selected");
		horizontalLayoutCUType.addComponent(cuTypeSelected);
		horizontalLayoutCUType.setExpandRatio(cuTypeSelected, 1.0f);
		
		return horizontalLayoutCUType;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		
		// cuIDLabel
		cuIDLabel = new Label();
		cuIDLabel.setImmediate(false);
		cuIDLabel.setWidth("-1px");
		cuIDLabel.setHeight("-1px");
		cuIDLabel.setValue("CU ID:");
		horizontalLayout_1.addComponent(cuIDLabel);
		
		// cuIDTextField
		cuIDTextField = new TextField();
		cuIDTextField.setImmediate(false);
		cuIDTextField.setDescription("Unique Device ID");
		cuIDTextField.setWidth("100.0%");
		cuIDTextField.setHeight("-1px");
		cuIDTextField.setInputPrompt("unique cu id");
		horizontalLayout_1.addComponent(cuIDTextField);
		horizontalLayout_1.setExpandRatio(cuIDTextField, 1.0f);
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("100.0%");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);
		
		// cuParamTextArea
		cuParamTextArea = new TextArea();
		cuParamTextArea.setCaption("Control Unit Param:");
		cuParamTextArea.setImmediate(false);
		cuParamTextArea.setWidth("100.0%");
		cuParamTextArea.setHeight("-1px");
		horizontalLayout_2.addComponent(cuParamTextArea);
		
		return horizontalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_3() {
		// common part: create layout
		horizontalLayout_3 = new HorizontalLayout();
		horizontalLayout_3.setImmediate(false);
		horizontalLayout_3.setWidth("100.0%");
		horizontalLayout_3.setHeight("-1px");
		horizontalLayout_3.setMargin(false);
		
		// cuDriverTextArea
		cuDriverTextArea = new TextArea();
		cuDriverTextArea.setCaption("Control Unit Driver Configuration");
		cuDriverTextArea.setImmediate(false);
		cuDriverTextArea.setWidth("100.0%");
		cuDriverTextArea.setHeight("-1px");
		cuDriverTextArea.setInputPrompt("name-version-initstring");
		horizontalLayout_3.addComponent(cuDriverTextArea);
		
		return horizontalLayout_3;
	}

}
