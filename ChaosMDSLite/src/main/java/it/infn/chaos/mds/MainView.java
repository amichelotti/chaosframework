package it.infn.chaos.mds;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

public class MainView extends CustomComponent {
	@AutoGenerated
	private VerticalLayout		mainLayout;
	@AutoGenerated
	private HorizontalLayout	horizontalLayout_2;
	@AutoGenerated
	private VerticalLayout		attributeVerticalLayout;
	@AutoGenerated
	private Table				tableDatasetAttribute;
	@AutoGenerated
	private Label				label_1;
	@AutoGenerated
	private HorizontalLayout	horizontalLayout_3;
	@AutoGenerated
	private VerticalLayout		datasetsVerticalLayout;
	@AutoGenerated
	private Table				tableDataset;
	@AutoGenerated
	private Label				label_3;
	@AutoGenerated
	private VerticalLayout		deviceVerticalLayout;
	@AutoGenerated
	private HorizontalLayout	horizontalLayout_1;
	@AutoGenerated
	private Button				deleteButton;
	@AutoGenerated
	private Button				buttonRefresh;
	@AutoGenerated
	private Button				buttonSetUnsetInit;
	@AutoGenerated
	private HorizontalLayout	unitServerHorizontalLayout;
	@AutoGenerated
	private VerticalLayout		unitServerVerticalLayout;
	@AutoGenerated
	private VerticalLayout		unitServerWorkUnitTypeVerticalLayout;
	@AutoGenerated
	private Table				tableUnitServer;
	@AutoGenerated
	private Table				tableUnitServerWorkUnitType;
	@AutoGenerated
	private Table				tableDevice;
	@AutoGenerated
	private Label				deviceLabel;
	@AutoGenerated
	private Button				buttonPreference;
	@AutoGenerated
	private Label				label_2;
	private Button				buttonUnitServerUpdate;
	private Button				buttonUSCUAssociate;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long	serialVersionUID	= 1722906903909249860L;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the composition root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual editor.
	 */
	public MainView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	/**
	 * @return the mainLayout
	 */
	public VerticalLayout getMainLayout() {
		return mainLayout;
	}

	/**
	 * @return the label_3
	 */
	public Label getLabel_3() {
		return label_3;
	}

	/**
	 * @return the deviceLabel
	 */
	public Label getDeviceLabel() {
		return deviceLabel;
	}

	/**
	 * @return the buttonRefresh
	 */
	public Button getButtonRefresh() {
		return buttonRefresh;
	}

	/**
	 * @param buttonRefresh
	 *            the buttonRefresh to set
	 */
	public void setButtonRefresh(Button buttonRefresh) {
		this.buttonRefresh = buttonRefresh;
	}

	public Button getPreferenceButton() {
		return buttonPreference;
	}

	public Table getTableUnitServer() {
		return tableUnitServer;
	}

	/**
	 * @return the table_4
	 */
	public Table getTableDataset() {
		return tableDataset;
	}

	public Table getTableUnitServerCUType() {
		return tableUnitServerWorkUnitType;
	}

	public Button getButtonInitializedAtStartup() {
		return buttonSetUnsetInit;
	}

	/**
	 * @return the table_3
	 */
	public Table getTableDevice() {
		return tableDevice;
	}

	/**
	 * @return the table_3
	 */
	public Table getTableDatasetAttribute() {
		return tableDatasetAttribute;
	}

	public Button getButtonDelete() {
		return deleteButton;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("<h1>!CHAOS MetadataServer Lite</h1>");
		label_2.setContentMode(3);
		mainLayout.addComponent(label_2);

		// buttonPreference
		buttonPreference = new Button();
		buttonPreference.setCaption("Live Data Server Setup");
		buttonPreference.setImmediate(true);
		buttonPreference.setDescription("Permit to setup the hostname and port for the live data server ");
		buttonPreference.setWidth("-1px");
		buttonPreference.setHeight("-1px");
		mainLayout.addComponent(buttonPreference);

		unitServerHorizontalLayout = buildUnitServerHLayout();
		mainLayout.addComponent(unitServerHorizontalLayout);
		mainLayout.setComponentAlignment(unitServerHorizontalLayout, new Alignment(20));

		// horizontalLayout_3
		horizontalLayout_3 = buildHorizontalLayout_3();
		mainLayout.addComponent(horizontalLayout_3);
		mainLayout.setComponentAlignment(horizontalLayout_3, new Alignment(20));

		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2);
		mainLayout.setExpandRatio(horizontalLayout_2, 1.0f);

		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildUnitServerHLayout() {
		// common part: create layout
		unitServerHorizontalLayout = new HorizontalLayout();
		unitServerHorizontalLayout.setImmediate(false);
		unitServerHorizontalLayout.setWidth("100.0%");
		unitServerHorizontalLayout.setHeight("-1px");
		unitServerHorizontalLayout.setMargin(true);

		// deviceVerticalLayout
		deviceVerticalLayout = buildUnitServerVerticalLayout();
		unitServerHorizontalLayout.addComponent(deviceVerticalLayout);
		unitServerHorizontalLayout.setExpandRatio(deviceVerticalLayout, 1.0f);

		// datasetsVerticalLayout
		datasetsVerticalLayout = buildUnitServerWorkUnitsVerticalLayout();
		unitServerHorizontalLayout.addComponent(datasetsVerticalLayout);
		unitServerHorizontalLayout.setComponentAlignment(datasetsVerticalLayout, new Alignment(6));

		return unitServerHorizontalLayout;
	}

	@AutoGenerated
	private VerticalLayout buildUnitServerVerticalLayout() {
		// common part: create layout
		unitServerVerticalLayout = new VerticalLayout();
		unitServerVerticalLayout.setImmediate(false);
		unitServerVerticalLayout.setWidth("100.0%");
		unitServerVerticalLayout.setHeight("100.0%");
		unitServerVerticalLayout.setMargin(true);
		unitServerVerticalLayout.setSpacing(true);

		// deviceLabel
		Label usLabel = new Label();
		usLabel.setImmediate(false);
		usLabel.setWidth("-1px");
		usLabel.setHeight("-1px");
		usLabel.setValue("Unit Server");
		unitServerVerticalLayout.addComponent(usLabel);

		// tableDevice
		tableUnitServer = new Table();
		tableUnitServer.setImmediate(false);
		tableUnitServer.setWidth("100.0%");
		tableUnitServer.setHeight("100.0%");
		unitServerVerticalLayout.addComponent(tableUnitServer);
		unitServerVerticalLayout.setExpandRatio(tableUnitServer, 1.0f);

		unitServerVerticalLayout.addComponent(buildUnitServerButtonHorizontalLayout());
		// unit server button
		return unitServerVerticalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildUnitServerButtonHorizontalLayout() {
		// common part: create layout
		HorizontalLayout usbuttonHL = new HorizontalLayout();
		usbuttonHL.setImmediate(false);
		usbuttonHL.setWidth("-1px");
		usbuttonHL.setHeight("-1px");
		usbuttonHL.setMargin(true);
		usbuttonHL.setSpacing(true);

		// buttonSetUnsetInit
		buttonUnitServerUpdate = new Button();
		getButtonUnitServerUpdate().setCaption("Update list");
		getButtonUnitServerUpdate().setImmediate(true);
		getButtonUnitServerUpdate().setWidth("-1px");
		getButtonUnitServerUpdate().setHeight("-1px");
		usbuttonHL.addComponent(getButtonUnitServerUpdate());

		
		buttonUSCUAssociate = new Button();
		getButtonUSCUAssociate().setCaption("Associate new CUID");
		getButtonUSCUAssociate().setImmediate(true);
		getButtonUSCUAssociate().setWidth("-1px");
		getButtonUSCUAssociate().setHeight("-1px");
		usbuttonHL.addComponent(getButtonUSCUAssociate());
		return usbuttonHL;
	}

	@AutoGenerated
	private VerticalLayout buildUnitServerWorkUnitsVerticalLayout() {
		// common part: create layout
		unitServerWorkUnitTypeVerticalLayout = new VerticalLayout();
		unitServerWorkUnitTypeVerticalLayout.setImmediate(false);
		unitServerWorkUnitTypeVerticalLayout.setWidth("320px");
		unitServerWorkUnitTypeVerticalLayout.setHeight("100.0%");
		unitServerWorkUnitTypeVerticalLayout.setMargin(true);
		unitServerWorkUnitTypeVerticalLayout.setSpacing(true);

		// label_3
		Label label = new Label();
		label.setImmediate(false);
		label.setWidth("-1px");
		label.setHeight("-1px");
		label.setValue("CU Types");
		unitServerWorkUnitTypeVerticalLayout.addComponent(label);

		// tableDataset
		tableUnitServerWorkUnitType = new Table();
		tableUnitServerWorkUnitType.setImmediate(false);
		tableUnitServerWorkUnitType.setWidth("100.0%");
		tableUnitServerWorkUnitType.setHeight("100.0%");
		unitServerWorkUnitTypeVerticalLayout.addComponent(tableUnitServerWorkUnitType);
		unitServerWorkUnitTypeVerticalLayout.setExpandRatio(tableUnitServerWorkUnitType, 1.0f);

		return unitServerWorkUnitTypeVerticalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_3() {
		// common part: create layout
		horizontalLayout_3 = new HorizontalLayout();
		horizontalLayout_3.setImmediate(false);
		horizontalLayout_3.setWidth("100.0%");
		horizontalLayout_3.setHeight("-1px");
		horizontalLayout_3.setMargin(true);

		// deviceVerticalLayout
		deviceVerticalLayout = buildDeviceVerticalLayout();
		horizontalLayout_3.addComponent(deviceVerticalLayout);
		horizontalLayout_3.setExpandRatio(deviceVerticalLayout, 1.0f);

		// datasetsVerticalLayout
		datasetsVerticalLayout = buildDatasetsVerticalLayout();
		horizontalLayout_3.addComponent(datasetsVerticalLayout);
		horizontalLayout_3.setComponentAlignment(datasetsVerticalLayout, new Alignment(6));

		return horizontalLayout_3;
	}

	@AutoGenerated
	private VerticalLayout buildDeviceVerticalLayout() {
		// common part: create layout
		deviceVerticalLayout = new VerticalLayout();
		deviceVerticalLayout.setImmediate(false);
		deviceVerticalLayout.setWidth("100.0%");
		deviceVerticalLayout.setHeight("100.0%");
		deviceVerticalLayout.setMargin(true);
		deviceVerticalLayout.setSpacing(true);

		// deviceLabel
		deviceLabel = new Label();
		deviceLabel.setImmediate(false);
		deviceLabel.setWidth("-1px");
		deviceLabel.setHeight("-1px");
		deviceLabel.setValue("Devices");
		deviceVerticalLayout.addComponent(deviceLabel);

		// tableDevice
		tableDevice = new Table();
		tableDevice.setImmediate(false);
		tableDevice.setWidth("100.0%");
		tableDevice.setHeight("100.0%");
		deviceVerticalLayout.addComponent(tableDevice);
		deviceVerticalLayout.setExpandRatio(tableDevice, 1.0f);

		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		deviceVerticalLayout.addComponent(horizontalLayout_1);

		return deviceVerticalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(true);
		horizontalLayout_1.setSpacing(true);

		// buttonSetUnsetInit
		buttonSetUnsetInit = new Button();
		buttonSetUnsetInit.setCaption("Swap Initialization Option");
		buttonSetUnsetInit.setImmediate(true);
		buttonSetUnsetInit.setWidth("-1px");
		buttonSetUnsetInit.setHeight("-1px");
		horizontalLayout_1.addComponent(buttonSetUnsetInit);

		// buttonRefresh
		buttonRefresh = new Button();
		buttonRefresh.setCaption("Update");
		buttonRefresh.setImmediate(true);
		buttonRefresh.setDescription("Update the device list");
		buttonRefresh.setWidth("-1px");
		buttonRefresh.setHeight("-1px");
		horizontalLayout_1.addComponent(buttonRefresh);
		horizontalLayout_1.setComponentAlignment(buttonRefresh, new Alignment(33));

		// deleteButton
		deleteButton = new Button();
		deleteButton.setCaption("Delete");
		deleteButton.setImmediate(true);
		deleteButton.setDescription("Delete a device");
		deleteButton.setWidth("-1px");
		deleteButton.setHeight("-1px");
		horizontalLayout_1.addComponent(deleteButton);

		return horizontalLayout_1;
	}

	@AutoGenerated
	private VerticalLayout buildDatasetsVerticalLayout() {
		// common part: create layout
		datasetsVerticalLayout = new VerticalLayout();
		datasetsVerticalLayout.setImmediate(false);
		datasetsVerticalLayout.setWidth("320px");
		datasetsVerticalLayout.setHeight("100.0%");
		datasetsVerticalLayout.setMargin(true);
		datasetsVerticalLayout.setSpacing(true);

		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("Datasets");
		datasetsVerticalLayout.addComponent(label_3);

		// tableDataset
		tableDataset = new Table();
		tableDataset.setImmediate(false);
		tableDataset.setWidth("100.0%");
		tableDataset.setHeight("100.0%");
		datasetsVerticalLayout.addComponent(tableDataset);
		datasetsVerticalLayout.setExpandRatio(tableDataset, 1.0f);

		return datasetsVerticalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("100.0%");
		horizontalLayout_2.setHeight("100.0%");
		horizontalLayout_2.setMargin(false);

		// attributeVerticalLayout
		attributeVerticalLayout = buildAttributeVerticalLayout();
		horizontalLayout_2.addComponent(attributeVerticalLayout);

		return horizontalLayout_2;
	}

	@AutoGenerated
	private VerticalLayout buildAttributeVerticalLayout() {
		// common part: create layout
		attributeVerticalLayout = new VerticalLayout();
		attributeVerticalLayout.setImmediate(false);
		attributeVerticalLayout.setWidth("100.0%");
		attributeVerticalLayout.setHeight("100.0%");
		attributeVerticalLayout.setMargin(false);
		attributeVerticalLayout.setSpacing(true);

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("Datasets Attribute");
		attributeVerticalLayout.addComponent(label_1);

		// tableDatasetAttribute
		tableDatasetAttribute = new Table();
		tableDatasetAttribute.setImmediate(false);
		tableDatasetAttribute.setWidth("100.0%");
		tableDatasetAttribute.setHeight("-1px");
		attributeVerticalLayout.addComponent(tableDatasetAttribute);

		return attributeVerticalLayout;
	}

	public Button getButtonUnitServerUpdate() {
		return buttonUnitServerUpdate;
	}

	public Button getButtonUSCUAssociate() {
		return buttonUSCUAssociate;
	}
}
